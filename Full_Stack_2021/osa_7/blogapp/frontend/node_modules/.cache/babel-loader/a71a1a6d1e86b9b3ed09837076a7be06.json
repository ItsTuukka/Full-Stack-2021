{"ast":null,"code":"var _jsxFileName = \"/home/ytuukka/Full_Stack_2021/osa_7/blogapp/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport Blog from './components/Blog';\nimport LoginForm from './components/LoginForm';\nimport NewBlogForm from './components/NewBlogForm';\nimport Notification from './components/Notification';\nimport Togglable from './components/Togglable';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport userService from './services/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [user, setUser] = useState(null);\n  const [notification, setNotification] = useState(null);\n  const blogFormRef = useRef();\n\n  const byLikes = (b1, b2) => b2.likes > b1.likes ? 1 : -1;\n\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs.sort(byLikes)));\n  }, []);\n  useEffect(() => {\n    const userFromStorage = userService.getUser();\n\n    if (userFromStorage) {\n      setUser(userFromStorage);\n    }\n  }, []);\n\n  const login = async (username, password) => {\n    loginService.login({\n      username,\n      password\n    }).then(user => {\n      setUser(user);\n      userService.setUser(user);\n      notify(`${user.name} logged in!`);\n    }).catch(() => {\n      notify('wrong username/password', 'alert');\n    });\n  };\n\n  const logout = () => {\n    setUser(null);\n    userService.clearUser();\n    notify('good bye!');\n  };\n\n  const createBlog = async blog => {\n    blogService.create(blog).then(createdBlog => {\n      notify(`a new blog '${createdBlog.title}' by ${createdBlog.author} added`);\n      setBlogs(blogs.concat(createdBlog));\n      blogFormRef.current.toggleVisibility();\n    }).catch(error => {\n      notify('creating a blog failed: ' + error.response.data.error, 'alert');\n    });\n  };\n\n  const removeBlog = id => {\n    const toRemove = blogs.find(b => b.id === id);\n    const ok = window.confirm(`remove '${toRemove.title}' by ${toRemove.author}?`);\n\n    if (!ok) {\n      return;\n    }\n\n    blogService.remove(id).then(() => {\n      const updatedBlogs = blogs.filter(b => b.id !== id).sort(byLikes);\n      setBlogs(updatedBlogs);\n    });\n  };\n\n  const likeBlog = async id => {\n    const toLike = blogs.find(b => b.id === id);\n    const liked = { ...toLike,\n      likes: (toLike.likes || 0) + 1,\n      user: toLike.user.id\n    };\n    blogService.update(liked.id, liked).then(updatedBlog => {\n      notify(`you liked '${updatedBlog.title}' by ${updatedBlog.author}`);\n      const updatedBlogs = blogs.map(b => b.id === id ? updatedBlog : b).sort(byLikes);\n      setBlogs(updatedBlogs);\n    });\n  };\n\n  const notify = function (message) {\n    let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'info';\n    setNotification({\n      message,\n      type\n    });\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  };\n\n  if (user === null) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Notification, {\n        notification: notification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n        onLogin: login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notification: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user.name, \" logged in\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"new note\",\n      ref: blogFormRef,\n      children: /*#__PURE__*/_jsxDEV(NewBlogForm, {\n        onCreate: createBlog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"blogs\",\n      children: blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n        blog: blog,\n        likeBlog: likeBlog,\n        removeBlog: removeBlog,\n        user: user\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Yyc/+lu8apLmOwefImHrwsBKCc8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ytuukka/Full_Stack_2021/osa_7/blogapp/frontend/src/App.js"],"names":["useState","useEffect","useRef","Blog","LoginForm","NewBlogForm","Notification","Togglable","blogService","loginService","userService","App","blogs","setBlogs","user","setUser","notification","setNotification","blogFormRef","byLikes","b1","b2","likes","getAll","then","sort","userFromStorage","getUser","login","username","password","notify","name","catch","logout","clearUser","createBlog","blog","create","createdBlog","title","author","concat","current","toggleVisibility","error","response","data","removeBlog","id","toRemove","find","b","ok","window","confirm","remove","updatedBlogs","filter","likeBlog","toLike","liked","update","updatedBlog","map","message","type","setTimeout"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react'\n\nimport Blog from './components/Blog'\nimport LoginForm from './components/LoginForm'\nimport NewBlogForm from './components/NewBlogForm'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\n\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport userService from './services/user'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const [notification, setNotification] = useState(null)\n  const blogFormRef = useRef()\n  const byLikes = (b1, b2) => (b2.likes > b1.likes ? 1 : -1)\n\n  useEffect(() => {\n    blogService.getAll().then((blogs) => setBlogs(blogs.sort(byLikes)))\n  }, [])\n\n  useEffect(() => {\n    const userFromStorage = userService.getUser()\n    if (userFromStorage) {\n      setUser(userFromStorage)\n    }\n  }, [])\n\n  const login = async (username, password) => {\n    loginService\n      .login({\n        username,\n        password,\n      })\n      .then((user) => {\n        setUser(user)\n        userService.setUser(user)\n        notify(`${user.name} logged in!`)\n      })\n      .catch(() => {\n        notify('wrong username/password', 'alert')\n      })\n  }\n\n  const logout = () => {\n    setUser(null)\n    userService.clearUser()\n    notify('good bye!')\n  }\n\n  const createBlog = async (blog) => {\n    blogService\n      .create(blog)\n      .then((createdBlog) => {\n        notify(\n          `a new blog '${createdBlog.title}' by ${createdBlog.author} added`\n        )\n        setBlogs(blogs.concat(createdBlog))\n        blogFormRef.current.toggleVisibility()\n      })\n      .catch((error) => {\n        notify('creating a blog failed: ' + error.response.data.error, 'alert')\n      })\n  }\n\n  const removeBlog = (id) => {\n    const toRemove = blogs.find((b) => b.id === id)\n\n    const ok = window.confirm(\n      `remove '${toRemove.title}' by ${toRemove.author}?`\n    )\n\n    if (!ok) {\n      return\n    }\n\n    blogService.remove(id).then(() => {\n      const updatedBlogs = blogs.filter((b) => b.id !== id).sort(byLikes)\n      setBlogs(updatedBlogs)\n    })\n  }\n\n  const likeBlog = async (id) => {\n    const toLike = blogs.find((b) => b.id === id)\n    const liked = {\n      ...toLike,\n      likes: (toLike.likes || 0) + 1,\n      user: toLike.user.id,\n    }\n\n    blogService.update(liked.id, liked).then((updatedBlog) => {\n      notify(`you liked '${updatedBlog.title}' by ${updatedBlog.author}`)\n      const updatedBlogs = blogs\n        .map((b) => (b.id === id ? updatedBlog : b))\n        .sort(byLikes)\n      setBlogs(updatedBlogs)\n    })\n  }\n\n  const notify = (message, type = 'info') => {\n    setNotification({ message, type })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  if (user === null) {\n    return (\n      <>\n        <Notification notification={notification} />\n        <LoginForm onLogin={login} />\n      </>\n    )\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n\n      <Notification notification={notification} />\n\n      <div>\n        {user.name} logged in\n        <button onClick={logout}>logout</button>\n      </div>\n\n      <Togglable buttonLabel=\"new note\" ref={blogFormRef}>\n        <NewBlogForm onCreate={createBlog} />\n      </Togglable>\n\n      <div id=\"blogs\">\n        {blogs.map((blog) => (\n          <Blog\n            key={blog.id}\n            blog={blog}\n            likeBlog={likeBlog}\n            removeBlog={removeBlog}\n            user={user}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}