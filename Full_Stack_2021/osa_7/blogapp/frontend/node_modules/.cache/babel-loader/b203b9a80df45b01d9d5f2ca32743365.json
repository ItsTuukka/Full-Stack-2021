{"ast":null,"code":"var _jsxFileName = \"/home/ytuukka/Full_Stack_2021/osa_7/blogapp/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport Bloglist from './components/Bloglist';\nimport LoginForm from './components/LoginForm';\nimport Notification from './components/Notification';\nimport Userlist from './components/Userlist';\nimport Home from './components/Home';\nimport User from './components/User';\nimport BlogDetails from './components/BlogDetails';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport userService from './services/user';\nimport { setNotification } from './reducers/notificationReducer';\nimport { useDispatch } from 'react-redux';\nimport { useMatch, Routes, Route, Navigate, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState(null);\n  const blogFormRef = useRef();\n\n  const byLikes = (b1, b2) => b2.likes > b1.likes ? 1 : -1;\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs.sort(byLikes)));\n  }, []);\n  useEffect(() => {\n    userService.getAll().then(users => setUsers(users));\n  }, []);\n  useEffect(() => {\n    const userFromStorage = userService.getUser();\n\n    if (userFromStorage) {\n      setUser(userFromStorage);\n    }\n  }, []);\n\n  const login = async (username, password) => {\n    loginService.login({\n      username,\n      password\n    }).then(user => {\n      setUser(user);\n      userService.setUser(user);\n      notify(`${user.name} logged in!`);\n    }).catch(() => {\n      notify('wrong username/password', 'alert');\n    });\n  };\n\n  const logout = () => {\n    setUser(null);\n    userService.clearUser();\n    notify('good bye!');\n  };\n\n  const createBlog = async blog => {\n    blogService.create(blog).then(createdBlog => {\n      notify(`a new blog '${createdBlog.title}' by ${createdBlog.author} added`);\n      setBlogs(blogs.concat(createdBlog));\n      blogFormRef.current.toggleVisibility();\n    }).catch(error => {\n      notify('creating a blog failed: ' + error.response.data.error, 'alert');\n    });\n  };\n\n  const removeBlog = id => {\n    const toRemove = blogs.find(b => b.id === id);\n    const ok = window.confirm(`remove '${toRemove.title}' by ${toRemove.author}?`);\n\n    if (!ok) {\n      return;\n    }\n\n    blogService.remove(id).then(() => {\n      const updatedBlogs = blogs.filter(b => b.id !== id).sort(byLikes);\n      setBlogs(updatedBlogs);\n    });\n  };\n\n  const likeBlog = async id => {\n    const toLike = blogs.find(b => b.id === id);\n    const liked = { ...toLike,\n      likes: (toLike.likes || 0) + 1,\n      user: toLike.user.id\n    };\n    blogService.update(liked.id, liked).then(updatedBlog => {\n      notify(`you liked '${updatedBlog.title}' by ${updatedBlog.author}`);\n      const updatedBlogs = blogs.map(b => b.id === id ? updatedBlog : b).sort(byLikes);\n      setBlogs(updatedBlogs);\n    });\n  };\n\n  const notify = function (message) {\n    let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'info';\n    dispatch(setNotification(message, type));\n  };\n\n  const usermatch = useMatch('/users/:id');\n  const userById = usermatch ? users.find(user => user.id === usermatch.params.id) : null;\n  const blogmatch = useMatch('/blogs/:id');\n  const blogById = blogmatch ? blogs.find(blog => blog.id === blogmatch.params.id) : null;\n  const padding = {\n    padding: 5\n  };\n\n  if (user === null) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n        onLogin: login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        style: padding,\n        to: \"/\",\n        children: \"blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        style: padding,\n        to: \"/users\",\n        children: \"users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), user && /*#__PURE__*/_jsxDEV(\"em\", {\n        children: [user.name, \" logged in\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 26\n      }, this), user && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Home, {\n        user: user,\n        logout: logout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/blogs/:id\",\n        element: blogById ? /*#__PURE__*/_jsxDEV(BlogDetails, {\n          blog: blogById,\n          likeBlog: likeBlog,\n          removeBlog: removeBlog,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          replace: true,\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/users/:id\",\n        element: /*#__PURE__*/_jsxDEV(User, {\n          user: userById\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/users\",\n        element: /*#__PURE__*/_jsxDEV(Userlist, {\n          users: users\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Bloglist, {\n          blogs: blogs,\n          likeBlog: likeBlog,\n          removeBlog: removeBlog,\n          user: user,\n          createBlog: createBlog\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"aN2OnfQMjQcY0hMKoQBYxDN7TYo=\", false, function () {\n  return [useDispatch, useMatch, useMatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ytuukka/Full_Stack_2021/osa_7/blogapp/frontend/src/App.js"],"names":["useState","useEffect","useRef","Bloglist","LoginForm","Notification","Userlist","Home","User","BlogDetails","blogService","loginService","userService","setNotification","useDispatch","useMatch","Routes","Route","Navigate","Link","App","blogs","setBlogs","users","setUsers","user","setUser","blogFormRef","byLikes","b1","b2","likes","dispatch","getAll","then","sort","userFromStorage","getUser","login","username","password","notify","name","catch","logout","clearUser","createBlog","blog","create","createdBlog","title","author","concat","current","toggleVisibility","error","response","data","removeBlog","id","toRemove","find","b","ok","window","confirm","remove","updatedBlogs","filter","likeBlog","toLike","liked","update","updatedBlog","map","message","type","usermatch","userById","params","blogmatch","blogById","padding"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react'\n\nimport Bloglist from './components/Bloglist'\nimport LoginForm from './components/LoginForm'\nimport Notification from './components/Notification'\nimport Userlist from './components/Userlist'\nimport Home from './components/Home'\nimport User from './components/User'\nimport BlogDetails from './components/BlogDetails'\n\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport userService from './services/user'\n\nimport { setNotification } from './reducers/notificationReducer'\nimport { useDispatch } from 'react-redux'\n\nimport { useMatch, Routes, Route, Navigate, Link } from 'react-router-dom'\n\nconst App = () => {\n    const [blogs, setBlogs] = useState([])\n    const [users, setUsers] = useState([])\n    const [user, setUser] = useState(null)\n    const blogFormRef = useRef()\n    const byLikes = (b1, b2) => (b2.likes > b1.likes ? 1 : -1)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        blogService.getAll().then((blogs) => setBlogs(blogs.sort(byLikes)))\n    }, [])\n\n    useEffect(() => {\n        userService.getAll().then((users) => setUsers(users))\n    }, [])\n\n    useEffect(() => {\n        const userFromStorage = userService.getUser()\n        if (userFromStorage) {\n            setUser(userFromStorage)\n        }\n    }, [])\n\n    const login = async (username, password) => {\n        loginService\n            .login({\n                username,\n                password,\n            })\n            .then((user) => {\n                setUser(user)\n                userService.setUser(user)\n                notify(`${user.name} logged in!`)\n            })\n            .catch(() => {\n                notify('wrong username/password', 'alert')\n            })\n    }\n\n    const logout = () => {\n        setUser(null)\n        userService.clearUser()\n        notify('good bye!')\n    }\n\n    const createBlog = async (blog) => {\n        blogService\n            .create(blog)\n            .then((createdBlog) => {\n                notify(\n                    `a new blog '${createdBlog.title}' by ${createdBlog.author} added`\n                )\n                setBlogs(blogs.concat(createdBlog))\n                blogFormRef.current.toggleVisibility()\n            })\n            .catch((error) => {\n                notify(\n                    'creating a blog failed: ' + error.response.data.error,\n                    'alert'\n                )\n            })\n    }\n\n    const removeBlog = (id) => {\n        const toRemove = blogs.find((b) => b.id === id)\n\n        const ok = window.confirm(\n            `remove '${toRemove.title}' by ${toRemove.author}?`\n        )\n\n        if (!ok) {\n            return\n        }\n\n        blogService.remove(id).then(() => {\n            const updatedBlogs = blogs.filter((b) => b.id !== id).sort(byLikes)\n            setBlogs(updatedBlogs)\n        })\n    }\n\n    const likeBlog = async (id) => {\n        const toLike = blogs.find((b) => b.id === id)\n        const liked = {\n            ...toLike,\n            likes: (toLike.likes || 0) + 1,\n            user: toLike.user.id,\n        }\n\n        blogService.update(liked.id, liked).then((updatedBlog) => {\n            notify(`you liked '${updatedBlog.title}' by ${updatedBlog.author}`)\n            const updatedBlogs = blogs\n                .map((b) => (b.id === id ? updatedBlog : b))\n                .sort(byLikes)\n            setBlogs(updatedBlogs)\n        })\n    }\n\n    const notify = (message, type = 'info') => {\n        dispatch(setNotification(message, type))\n    }\n\n    const usermatch = useMatch('/users/:id')\n    const userById = usermatch\n        ? users.find((user) => user.id === usermatch.params.id)\n        : null\n\n    const blogmatch = useMatch('/blogs/:id')\n    const blogById = blogmatch\n        ? blogs.find((blog) => blog.id === blogmatch.params.id)\n        : null\n\n    const padding = {\n        padding: 5,\n    }\n\n    if (user === null) {\n        return (\n            <>\n                <Notification />\n                <LoginForm onLogin={login} />\n            </>\n        )\n    }\n\n    return (\n        <div>\n            <div>\n                <Link style={padding} to=\"/\">\n                    blogs\n                </Link>\n                <Link style={padding} to=\"/users\">\n                    users\n                </Link>\n                {user && <em>{user.name} logged in</em>}\n                {user && <button onClick={logout}>logout</button>}\n            </div>\n            <div>\n                <Home user={user} logout={logout} />\n            </div>\n            <Routes>\n                <Route\n                    path=\"/blogs/:id\"\n                    element={\n                        blogById ? (\n                            <BlogDetails\n                                blog={blogById}\n                                likeBlog={likeBlog}\n                                removeBlog={removeBlog}\n                                user={user}\n                            />\n                        ) : (\n                            <Navigate replace to=\"/\" />\n                        )\n                    }\n                />\n                <Route path=\"/users/:id\" element={<User user={userById} />} />\n                <Route path=\"/users\" element={<Userlist users={users} />} />\n                <Route\n                    path=\"/\"\n                    element={\n                        <Bloglist\n                            blogs={blogs}\n                            likeBlog={likeBlog}\n                            removeBlog={removeBlog}\n                            user={user}\n                            createBlog={createBlog}\n                        />\n                    }\n                />\n            </Routes>\n        </div>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}