{"ast":null,"code":"var _jsxFileName = \"/home/ytuukka/Full_Stack_2021/osa_7/blogapp/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport Blog from './components/Blog';\nimport LoginForm from './components/LoginForm';\nimport NewBlogForm from './components/NewBlogForm';\nimport Notification from './components/Notification';\nimport Togglable from './components/Togglable';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport userService from './services/user';\nimport { setNotification } from './reducers/notificationReducer';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [user, setUser] = useState(null);\n  const blogFormRef = useRef();\n\n  const byLikes = (b1, b2) => b2.likes > b1.likes ? 1 : -1;\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs.sort(byLikes)));\n  }, []);\n  useEffect(() => {\n    const userFromStorage = userService.getUser();\n\n    if (userFromStorage) {\n      setUser(userFromStorage);\n    }\n  }, []);\n\n  const login = async (username, password) => {\n    loginService.login({\n      username,\n      password\n    }).then(user => {\n      setUser(user);\n      userService.setUser(user);\n      notify(`${user.name} logged in!`);\n    }).catch(() => {\n      notify('wrong username/password', 'alert');\n    });\n  };\n\n  const logout = () => {\n    setUser(null);\n    userService.clearUser();\n    notify('good bye!');\n  };\n\n  const createBlog = async blog => {\n    blogService.create(blog).then(createdBlog => {\n      notify(`a new blog '${createdBlog.title}' by ${createdBlog.author} added`);\n      setBlogs(blogs.concat(createdBlog));\n      blogFormRef.current.toggleVisibility();\n    }).catch(error => {\n      notify('creating a blog failed: ' + error.response.data.error, 'alert');\n    });\n  };\n\n  const removeBlog = id => {\n    const toRemove = blogs.find(b => b.id === id);\n    const ok = window.confirm(`remove '${toRemove.title}' by ${toRemove.author}?`);\n\n    if (!ok) {\n      return;\n    }\n\n    blogService.remove(id).then(() => {\n      const updatedBlogs = blogs.filter(b => b.id !== id).sort(byLikes);\n      setBlogs(updatedBlogs);\n    });\n  };\n\n  const likeBlog = async id => {\n    const toLike = blogs.find(b => b.id === id);\n    const liked = { ...toLike,\n      likes: (toLike.likes || 0) + 1,\n      user: toLike.user.id\n    };\n    blogService.update(liked.id, liked).then(updatedBlog => {\n      notify(`you liked '${updatedBlog.title}' by ${updatedBlog.author}`);\n      const updatedBlogs = blogs.map(b => b.id === id ? updatedBlog : b).sort(byLikes);\n      setBlogs(updatedBlogs);\n    });\n  };\n\n  const notify = function (message) {\n    let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'info';\n    dispatch(setNotification(message, type));\n  };\n\n  if (user === null) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n        onLogin: login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user.name, \" logged in\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"new note\",\n      ref: blogFormRef,\n      children: /*#__PURE__*/_jsxDEV(NewBlogForm, {\n        onCreate: createBlog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"blogs\",\n      children: blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n        blog: blog,\n        likeBlog: likeBlog,\n        removeBlog: removeBlog,\n        user: user\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"pCexdR+nuhC4GwQPvjaWOLDaqDU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ytuukka/Full_Stack_2021/osa_7/blogapp/frontend/src/App.js"],"names":["useState","useEffect","useRef","Blog","LoginForm","NewBlogForm","Notification","Togglable","blogService","loginService","userService","setNotification","useDispatch","App","blogs","setBlogs","user","setUser","blogFormRef","byLikes","b1","b2","likes","dispatch","getAll","then","sort","userFromStorage","getUser","login","username","password","notify","name","catch","logout","clearUser","createBlog","blog","create","createdBlog","title","author","concat","current","toggleVisibility","error","response","data","removeBlog","id","toRemove","find","b","ok","window","confirm","remove","updatedBlogs","filter","likeBlog","toLike","liked","update","updatedBlog","map","message","type"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react'\n\nimport Blog from './components/Blog'\nimport LoginForm from './components/LoginForm'\nimport NewBlogForm from './components/NewBlogForm'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\n\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport userService from './services/user'\n\nimport { setNotification } from './reducers/notificationReducer'\nimport { useDispatch } from 'react-redux'\n\nconst App = () => {\n    const [blogs, setBlogs] = useState([])\n    const [user, setUser] = useState(null)\n    const blogFormRef = useRef()\n    const byLikes = (b1, b2) => (b2.likes > b1.likes ? 1 : -1)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        blogService.getAll().then((blogs) => setBlogs(blogs.sort(byLikes)))\n    }, [])\n\n    useEffect(() => {\n        const userFromStorage = userService.getUser()\n        if (userFromStorage) {\n            setUser(userFromStorage)\n        }\n    }, [])\n\n    const login = async (username, password) => {\n        loginService\n            .login({\n                username,\n                password,\n            })\n            .then((user) => {\n                setUser(user)\n                userService.setUser(user)\n                notify(`${user.name} logged in!`)\n            })\n            .catch(() => {\n                notify('wrong username/password', 'alert')\n            })\n    }\n\n    const logout = () => {\n        setUser(null)\n        userService.clearUser()\n        notify('good bye!')\n    }\n\n    const createBlog = async (blog) => {\n        blogService\n            .create(blog)\n            .then((createdBlog) => {\n                notify(\n                    `a new blog '${createdBlog.title}' by ${createdBlog.author} added`\n                )\n                setBlogs(blogs.concat(createdBlog))\n                blogFormRef.current.toggleVisibility()\n            })\n            .catch((error) => {\n                notify(\n                    'creating a blog failed: ' + error.response.data.error,\n                    'alert'\n                )\n            })\n    }\n\n    const removeBlog = (id) => {\n        const toRemove = blogs.find((b) => b.id === id)\n\n        const ok = window.confirm(\n            `remove '${toRemove.title}' by ${toRemove.author}?`\n        )\n\n        if (!ok) {\n            return\n        }\n\n        blogService.remove(id).then(() => {\n            const updatedBlogs = blogs.filter((b) => b.id !== id).sort(byLikes)\n            setBlogs(updatedBlogs)\n        })\n    }\n\n    const likeBlog = async (id) => {\n        const toLike = blogs.find((b) => b.id === id)\n        const liked = {\n            ...toLike,\n            likes: (toLike.likes || 0) + 1,\n            user: toLike.user.id,\n        }\n\n        blogService.update(liked.id, liked).then((updatedBlog) => {\n            notify(`you liked '${updatedBlog.title}' by ${updatedBlog.author}`)\n            const updatedBlogs = blogs\n                .map((b) => (b.id === id ? updatedBlog : b))\n                .sort(byLikes)\n            setBlogs(updatedBlogs)\n        })\n    }\n\n    const notify = (message, type = 'info') => {\n        dispatch(setNotification(message, type))\n    }\n\n    if (user === null) {\n        return (\n            <>\n                <Notification />\n                <LoginForm onLogin={login} />\n            </>\n        )\n    }\n\n    return (\n        <div>\n            <h2>blogs</h2>\n\n            <Notification />\n\n            <div>\n                {user.name} logged in\n                <button onClick={logout}>logout</button>\n            </div>\n\n            <Togglable buttonLabel=\"new note\" ref={blogFormRef}>\n                <NewBlogForm onCreate={createBlog} />\n            </Togglable>\n\n            <div id=\"blogs\">\n                {blogs.map((blog) => (\n                    <Blog\n                        key={blog.id}\n                        blog={blog}\n                        likeBlog={likeBlog}\n                        removeBlog={removeBlog}\n                        user={user}\n                    />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}